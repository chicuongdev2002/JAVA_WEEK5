package vn.edu.fit.iuh.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import vn.edu.fit.iuh.enities.Address;import vn.edu.fit.iuh.sevices.AddressService;import java.util.List;@Controller@RequestMapping("/addresses")public class AddressController {    @Autowired    private final AddressService addressService;    @Autowired    public AddressController(AddressService addressService) {        this.addressService = addressService;    }    @GetMapping("/")    public List<Address> getAllAddresses() {        return addressService.findAll();    }    @GetMapping("/{id}")    public ResponseEntity<Address> getAddressById(@PathVariable Long id) {        Address address = addressService.findById(id).orElse(null);        if (address != null) {            return ResponseEntity.ok(address);        } else {            return ResponseEntity.notFound().build();        }    }    @PostMapping("/")    public ResponseEntity<Address> createAddress(@RequestBody Address address) {        if (addressService.save(address)) {            return ResponseEntity.status(201).body(address);        } else {            return ResponseEntity.status(500).build();        }    }    @PutMapping("/{id}")    public ResponseEntity<Address> updateAddress(@PathVariable Long id, @RequestBody Address address) {        address.setId(id);        if (addressService.update(address).isPresent()) {            return ResponseEntity.ok(address);        } else {            return ResponseEntity.notFound().build();        }    }    @DeleteMapping("/{id}")    public ResponseEntity<Void> deleteAddress(@PathVariable Long id) {        if (addressService.delete(id).isPresent()) {            return ResponseEntity.noContent().build();        } else {            return ResponseEntity.notFound().build();        }    }}